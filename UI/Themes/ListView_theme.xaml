<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

   <Style x:Key="FocusVisual">
      <Setter Property="Control.Template">
         <Setter.Value>
            <ControlTemplate>
               <Rectangle
                  Margin="2"
                  SnapsToDevicePixels="true"
                  Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                  StrokeDashArray="1 2"
                  StrokeThickness="1" />
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#ededed" />
   <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent" />
   <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="CadetBlue" />
   <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
   <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="CadetBlue" />
   <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#ededed" />
   <Style x:Key="ListViewItemTheme" TargetType="{x:Type ListViewItem}">
      <Setter Property="SnapsToDevicePixels" Value="True" />
      <Setter Property="Padding" Value="4" />
      <Setter Property="Height" Value="25" />
      <Setter Property="Cursor" Value="Hand" />
      <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
      <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
      <Setter Property="Foreground" Value="Black" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListViewItem}">
               <Border
                  x:Name="Bd"
                  Padding="{TemplateBinding Padding}"
                  Background="LightGray"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="5"
                  SnapsToDevicePixels="true">
                  <ContentPresenter
                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
               </Border>
               <ControlTemplate.Triggers>
                  <MultiTrigger>
                     <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                     </MultiTrigger.Conditions>
                     <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
                     <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
                  </MultiTrigger>
                  <MultiTrigger>
                     <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                     </MultiTrigger.Conditions>
                     <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MainAccent}" />
                     <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />

                  </MultiTrigger>

                  <Trigger Property="IsEnabled" Value="False">
                     <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                     <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>